{"version":3,"sources":["components/BackToSearchButton/BackToSearchButton.jsx","components/charts/DoughnutChart/DoughnutChart.jsx","components/PollutionItem/PollutionItem.jsx","components/services.js","components/AirPollution/AirPollution.jsx","helpers/datePicker.js","components/charts/LineChart/LineChart.jsx","assets/Clear-min.png","assets/Clouds-min.png","assets/Drizzle-min.png","assets/Rain-min.png","assets/Snow-min.png","assets/Thunderstorm-min.png","helpers/getBackgroundImage.js","components/HourlyDashboardItem/HourlyDashboardItem.jsx","components/HourlyDashboard/HourlyDashboard.jsx","helpers/carouselConfig.js","components/AdditionallyDashboard/AdditionallyDashboard.jsx","components/AlertItem/AlertItem.jsx","components/AlertsDashboard/AlertsDashboard.jsx","components/CurrentWeather/CurrentWeather.jsx","components/Header/Header.jsx","helpers/changeMode.js","components/HourItem/HourItem.jsx","components/HourlyForecast/HourlyForecast.jsx","components/SearchField/SearchField.jsx","components/MainScreen/MainScreen.jsx","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js","helpers/keys.js"],"names":["withRouter","history","className","type","onClick","goBack","DoughnutChart","pollutions","airQualityIndex","getDataForChart","useCallback","values","labels","map","el","i","push","value","toFixed","title","data","datasets","backgroundColor","aqi","options","legend","display","cutoutPercentage","elements","center","text","PollutionItem","pollution","api","key","keys","API_KEY","base","BASE_URL","image","IMAGES_URL","getImages","logo","lat","lon","useState","setPollutions","setAirQualityIndex","useEffect","fetch","then","res","json","getAirPollution","list","components","newPollutions","main","length","index","UTCToTime","utc","format","moment","LineChart","weather","newForecast","setNewForecast","slice","valueForTempChart","temp","valueForFeelsLikeChart","feels_like","dt","label","fill","borderColor","getBackgroundImage","Snow","Rain","Clear","Thunderstorm","Drizzle","Clouds","HourlyDashboardItem","hourWeather","style","backgroundImage","src","icon","alt","Math","round","responsiveConfig","desktop","breakpoint","max","min","items","tablet","mobile","AdditionallyDashboard","sunrise","sunset","pressure","humidity","clouds","day","AlertItem","alert","period","setPeriod","from","start","to","end","sender_name","description","AlertsDashboard","alerts","idx","CurrentWeather","info","currentSlide","temperature","setTemperature","setDescription","name","country","Header","e","target","checked","document","body","classList","replace","changeMode","HourItem","hour","time","setTime","goToDaily","goToPollution","SearchField","handleChange","query","setQuery","placeholder","onChange","onKeyPress","setWeather","userLocation","errors","setErrors","setCurrentSlide","url","trim","getCurrentWeatherData","result","cod","message","coord","sys","getAllWeatherData","daily","additionalTransfrom","arrows","centerMode","containerClass","afterChange","previousSlide","_ref","draggable","focusOnSelect","keyBoardControl","minimumTouchDrag","renderButtonGroupOutside","renderDotsOutside","showDots","slidesToSlide","swipeable","responsive","hourly","setUserLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","module","exports"],"mappings":"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","file":"static/js/main.6a34b927.chunk.js","sourcesContent":["import { withRouter } from 'react-router';\n\nconst BackToSearchButton = ({ history }) => {\n  const goBack = () => {\n    history.goBack();\n  };\n  return (\n    <button className=\"unit\" type=\"button\" onClick={goBack}>\n      <i className=\"icon ion-md-arrow-back\" />\n    </button>\n  );\n};\n\nexport default withRouter(BackToSearchButton);\n","import { useCallback } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport './styles.scss';\n\nconst DoughnutChart = ({ pollutions, airQualityIndex }) => {\n  const getDataForChart = useCallback(() => {\n    const values = [];\n    const labels = [];\n    pollutions?.map((el, i) => {\n      if (i === 0) {\n        values.push((+el.value / 10).toFixed(2));\n        labels.push(`${el.title}/10`);\n      } else {\n        values.push(+el.value.toFixed(2));\n        labels.push(el.title);\n      }\n      return { values, labels };\n    });\n    return { values, labels };\n  }, [pollutions]);\n\n  const data = {\n    datasets: [\n      {\n        data: getDataForChart().values,\n        backgroundColor: [\n          '#8e7d9b',\n          '#5cce35',\n          '#d8c1d7',\n          '#4a5eb0',\n          '#21cae0',\n          '#8b2bcb',\n          '#fc3213',\n          '#c27ae4',\n        ],\n      },\n    ],\n    labels: getDataForChart().labels,\n  };\n\n  const options = {\n    legend: { display: false },\n    cutoutPercentage: 70,\n    elements: { center: { text: 'Red is 2/3 the total numbers' } },\n  };\n  return (\n    <>\n      <div>Click on the chart to see the values</div>\n      <div className=\"chart\">\n        <div className=\"aqi-value\">{airQualityIndex.aqi}</div>\n        <Doughnut data={data} type=\"pie\" options={options} />\n      </div>\n    </>\n  );\n};\n\nexport default DoughnutChart;\n","import './styles.scss';\n\nconst PollutionItem = ({ pollution }) => {\n  return (\n    <div>\n      <div className=\"sul-box-raised-2 pollution-wrapper\">\n        <div>{pollution.title}</div>\n        <div>{pollution.value} μg/m3</div>\n      </div>\n    </div>\n  );\n};\n\nexport default PollutionItem;\n","import keys from '../helpers/keys';\n\nconst api = {\n  key: keys.API_KEY,\n  base: keys.BASE_URL,\n  image: keys.IMAGES_URL,\n};\n\nexport const getCurrentWeatherData = (query) => {\n  let url;\n  if (typeof query === 'object') {\n    url = `${api.base}weather?lat=${query.lat}&lon=${query.lon}&units=metric&APPID=${api.key}`;\n  } else {\n    url = `${api.base}weather?q=${query.trim()}&units=metric&APPID=${api.key}`;\n  }\n  return fetch(url).then((res) => res.json());\n};\n\nexport const getAllWeatherData = (coord) => {\n  return fetch(\n    `${api.base}onecall?lat=${coord.lat}&lon=${coord.lon}&exclude=minutely&units=metric&APPID=${api.key}`,\n  ).then((res) => res.json());\n};\n\nexport const getAirPollution = (lat, lon) => {\n  return fetch(\n    `${api.base}air_pollution?lat=${lat}&lon=${lon}&appid=${api.key}`,\n  ).then((res) => res.json());\n};\n\nexport const getImages = (logo) => {\n  return `${api.image}${logo}@2x.png`;\n};\n","import { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router';\n\nimport BackToSearchButton from '../BackToSearchButton';\nimport DoughnutChart from '../charts/DoughnutChart';\nimport PollutionItem from '../PollutionItem';\nimport { getAirPollution } from '../services';\n\nimport './styles.scss';\n\nconst AirPollution = ({ history, lat, lon }) => {\n  const [pollutions, setPollutions] = useState([]);\n  const [airQualityIndex, setAirQualityIndex] = useState({});\n\n  useEffect(() => {\n    if (!lat && !lon) {\n      history.push('/');\n    } else {\n      getAirPollution(lat, lon).then((res) => {\n        const data = res.list[0].components;\n        const newPollutions = [\n          { title: 'Carbon monoxide', value: data['co'] },\n          { title: 'Nitrogen monoxide', value: data['nh3'] },\n          { title: 'Nitrogen dioxide', value: data['no'] },\n          { title: 'Ozone', value: data['no2'] },\n          { title: 'Sulphur dioxide', value: data['o3'] },\n          { title: 'Fine particles matter', value: data['pm2_5'] },\n          { title: 'Coarse particulate matter', value: data['pm10'] },\n          { title: 'Ammonia', value: data['so2'] },\n        ];\n        setPollutions(newPollutions);\n        setAirQualityIndex(res.list[0].main);\n      });\n    }\n  }, [history, lat, lon]);\n\n  return (\n    <>\n      <div className=\"sul-box-raised-3 pollutions-dashboard\">\n        <h1>Air Pollution</h1>\n        <BackToSearchButton />\n      </div>\n      <div className=\"sul-box-raised-3 pollutions-list\">\n        <div className=\"chart-wrapper\">\n          <DoughnutChart\n            pollutions={pollutions}\n            airQualityIndex={airQualityIndex}\n          />\n        </div>\n        <div className=\"sul-box-raised-3 aqi\">\n          <div className=\"aqi__title\">\n            AQI - Air Quality Index. <br />\n            Possible values: <br />\n            1, 2, 3, 4, 5.\n            <br /> Where 1 = Good,\n            <br /> 2 = Fair,\n            <br /> 3 = Moderate,\n            <br /> 4 = Poor,\n            <br /> 5 = Very Poor.\n          </div>\n        </div>\n        {pollutions.length &&\n          pollutions.map((pollution, index) => (\n            <PollutionItem pollution={pollution} key={index} />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(AirPollution);\n","import moment from 'moment';\n\nexport const UTCToTime = (utc, format) => {\n  return moment(utc * 1000).format(format);\n};\n","import { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport { UTCToTime } from '../../../helpers/datePicker';\n\nimport './styles.scss';\n\nconst LineChart = ({ weather }) => {\n  const [newForecast, setNewForecast] = useState([]);\n\n  useEffect(() => {\n    setNewForecast(weather?.slice(0, 11));\n  }, [weather]);\n\n  const valueForTempChart = newForecast.map((el) => el.temp);\n  const valueForFeelsLikeChart = newForecast.map((el) => el.feels_like);\n  const labels = newForecast.map((el) => UTCToTime(el.dt, 'HH-mm'));\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        label: 'temperature',\n        data: valueForTempChart,\n        fill: true,\n        backgroundColor: 'rgba(75,192,192,0.2)',\n        borderColor: 'rgba(75,192,192,1)',\n      },\n      {\n        label: 'feels like',\n        data: valueForFeelsLikeChart,\n        fill: false,\n        borderColor: '#742774',\n        backgroundColor: '#742774',\n      },\n    ],\n  };\n  return (\n    <div className=\"line-chart-wrapper\">\n      <Line data={data} />\n    </div>\n  );\n};\n\nexport default LineChart;\n","export default __webpack_public_path__ + \"static/media/Clear-min.78e9f3d1.png\";","export default __webpack_public_path__ + \"static/media/Clouds-min.6d20aa64.png\";","export default __webpack_public_path__ + \"static/media/Drizzle-min.e26404af.png\";","export default __webpack_public_path__ + \"static/media/Rain-min.68e98b8c.png\";","export default __webpack_public_path__ + \"static/media/Snow-min.c94e1547.png\";","export default __webpack_public_path__ + \"static/media/Thunderstorm-min.3bd34e37.png\";","import Clear from '../assets/Clear-min.png';\nimport Clouds from '../assets/Clouds-min.png';\nimport Drizzle from '../assets/Drizzle-min.png';\nimport Rain from '../assets/Rain-min.png';\nimport Snow from '../assets/Snow-min.png';\nimport Thunderstorm from '../assets/Thunderstorm-min.png';\n\nexport const getBackgroundImage = (weather) => {\n  const mainWeather = weather?.weather[0]?.main;\n  switch (mainWeather) {\n    case 'Snow':\n      return Snow;\n    case 'Rain':\n      return Rain;\n    case 'Clear':\n      return Clear;\n    case 'Thunderstorm':\n      return Thunderstorm;\n    case 'Drizzle':\n      return Drizzle;\n    case 'Clouds':\n      return Clouds;\n    default:\n      return null;\n  }\n};\n","import moment from 'moment';\n\nimport { getBackgroundImage } from '../../helpers/getBackgroundImage';\nimport { getImages } from '../services';\n\nimport './styles.scss';\n\nconst HourlyDashboardItem = ({ hourWeather }) => {\n  return (\n    <div\n      className=\"sul-box-raised-2 hour-wrapper\"\n      style={{ backgroundImage: `url(${getBackgroundImage(hourWeather)})` }}\n    >\n      <img src={getImages(hourWeather.weather[0].icon)} alt=\"weather-logo\" />\n      <div className=\"main\">{hourWeather.weather[0].main}</div>\n      <div className=\"temperature-dashboard\">\n        {Math.round(hourWeather.temp)}°C\n      </div>\n      <div className=\"date\">\n        {moment(hourWeather.dt * 1000).format('hh:mma dddd')}\n      </div>\n    </div>\n  );\n};\n\nexport default HourlyDashboardItem;\n","import { withRouter } from 'react-router';\n\nimport BackToSearchButton from '../BackToSearchButton';\nimport LineChart from '../charts/LineChart';\nimport HourlyDashboardItem from '../HourlyDashboardItem';\n\nimport './styles.scss';\n\nconst HourlyDashboard = ({ history, weather }) => {\n  if (!weather) {\n    history.push('/');\n  }\n\n  return (\n    <>\n      <div className=\"sul-box-raised-3 hourly-dashboard-wrapper\">\n        <h1>48 Hour Forecast</h1>\n        <BackToSearchButton />\n      </div>\n      <div className=\"sul-box-raised-3 hour-list\">\n        <LineChart weather={weather} />\n        {weather &&\n          weather.map((el) => {\n            return <HourlyDashboardItem hourWeather={el} key={el.dt} />;\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(HourlyDashboard);\n","export const responsiveConfig = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1024 },\n    items: 1,\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 464 },\n    items: 1,\n  },\n  mobile: {\n    breakpoint: { max: 464, min: 0 },\n    items: 1,\n  },\n};\n","import { UTCToTime } from '../../helpers/datePicker';\n\nimport './styles.scss';\n\nconst AdditionallyDashboard = ({ weather }) => {\n  return (\n    <div className=\"sul-box-raised-3\">\n      <div className=\"additionally-wrapper top\">\n        <div className=\"additionally-items\">\n          <p className=\"additionally-mark\">\n            {UTCToTime(weather.sunrise, 'hh:mma')}\n          </p>\n          <p className=\"additionally-key\">sunrise</p>\n        </div>\n        <div className=\"additionally-items\">\n          <p className=\"additionally-mark\">\n            {UTCToTime(weather.sunset, 'hh:mma')}\n          </p>\n          <p className=\"additionally-key\">sunset</p>\n        </div>\n        <div className=\"additionally-items\">\n          <p className=\"additionally-mark\">{weather.pressure}hPa</p>\n          <p className=\"additionally-key\">pressure</p>\n        </div>\n      </div>\n      <div className=\"additionally-wrapper\">\n        <div className=\"additionally-items\">\n          <p className=\"additionally-mark\">{weather.humidity}%</p>\n          <p className=\"additionally-key\">humidity</p>\n        </div>\n        <div className=\"additionally-items\">\n          <p className=\"additionally-mark\">{weather.clouds}%</p>\n          <p className=\"additionally-key\">clouds</p>\n        </div>\n        <div className=\"additionally-items\">\n          <p className=\"additionally-mark\">\n            {Math.round(weather.feels_like.day)}°C\n          </p>\n          <p className=\"additionally-key\">feels like</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdditionallyDashboard;\n","import { useEffect, useState } from 'react';\nimport moment from 'moment';\n\nimport './styles.scss';\n\nconst AlertItem = ({ alert }) => {\n  const [period, setPeriod] = useState({});\n  useEffect(() => {\n    setPeriod({\n      from: moment(alert.start * 1000).format('hh:mm a'),\n      to: moment(alert.end * 1000).format('hh:mm a'),\n    });\n  }, [alert]);\n\n  return (\n    <div className=\"sul-box-raised-3 alert-wrapper\">\n      <div className=\"sender\">\n        {alert.sender_name || 'Unknown source'} says:\n      </div>\n      <div>-\"{alert.description}\"</div>\n      <div className=\"period\">\n        from {period.from} to {period.to}\n      </div>\n    </div>\n  );\n};\n\nexport default AlertItem;\n","import { Fragment } from 'react';\n\nimport AlertItem from '../AlertItem';\n\nimport './styles.scss';\n\nconst AlertsDashboard = ({ alerts }) => {\n  return (\n    <div className=\"alerts-wrapper\">\n      <h2>Alerts</h2>\n      {alerts.map((alert, idx) => {\n        return (\n          <Fragment key={idx}>\n            {alert.description && <AlertItem alert={alert} />}\n          </Fragment>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default AlertsDashboard;\n","import { useEffect, useState } from 'react';\nimport moment from 'moment';\n\nimport { getBackgroundImage } from '../../helpers/getBackgroundImage';\n\nimport './styles.scss';\n\nconst CurrentWeather = ({ weather, info, currentSlide, onClick }) => {\n  const [temperature, setTemperature] = useState('');\n  const [description, setDescription] = useState([]);\n\n  useEffect(() => {\n    setTemperature(Math.round(weather.temp.day));\n    setDescription(weather.weather[0].description);\n  }, [weather.temp.day, weather.weather]);\n\n  return (\n    <div key={weather.dt}>\n      <div\n        className=\"sul-box-raised-3 location-container\"\n        style={{\n          backgroundImage: `url(${getBackgroundImage(weather)})`,\n        }}\n      >\n        <div className=\"location\" onClick={onClick}>\n          {info.name}, {info.country}\n        </div>\n        <div className=\"temperature\">{temperature}°C</div>\n        <div className=\"weather\">{description}</div>\n      </div>\n      <div className=\"current-date\">\n        {currentSlide === 0 && 'Now: '}\n        {moment(weather.dt * 1000).format('dddd - ll')}\n      </div>\n    </div>\n  );\n};\n\nexport default CurrentWeather;\n","import { changeMode } from '../../helpers/changeMode';\n\nconst Header = () => {\n  return (\n    <header className=\"sul-box-raised-2\">\n      <h1>Weather App.</h1>\n      <input\n        type=\"checkbox\"\n        className=\"sul-checkbox-type-2\"\n        onClick={(e) => changeMode(e)}\n      />\n    </header>\n  );\n};\n\nexport default Header;\n","export const changeMode = (e) => {\n  if (!e.target.checked) {\n    document.body.classList.replace('dark-mode', 'light-mode');\n  } else {\n    document.body.classList.replace('light-mode', 'dark-mode');\n  }\n};\n","import { useEffect, useState } from 'react';\nimport moment from 'moment';\n\nimport { getImages } from '../services';\n\nimport './styles.scss';\n\nconst HourItem = ({ hour }) => {\n  const [time, setTime] = useState('');\n  useEffect(() => {\n    setTime(moment(hour.dt * 1000).format('hh a'));\n  }, [hour]);\n\n  return (\n    <div className=\"forecast-item sul-box-raised-1 with-hover\">\n      <div>{time}</div>\n      <div className=\"item-temperature\">{Math.round(hour.temp)}°C</div>\n      <div className=\"weather-logo\">\n        <img src={getImages(hour.weather[0].icon)} alt=\"weather-logo\" />\n      </div>\n      <div>{hour.weather[0].main}</div>\n    </div>\n  );\n};\n\nexport default HourItem;\n","import { useCallback } from 'react';\nimport { withRouter } from 'react-router';\n\nimport HourItem from '../HourItem';\n\nimport './styles.scss';\n\nconst HourlyForecast = ({ history, weather }) => {\n  const goToDaily = useCallback(() => {\n    history.push('/daily');\n  }, [history]);\n\n  const goToPollution = useCallback(() => {\n    history.push('/air-pollution');\n  }, [history]);\n\n  return (\n    <>\n      <div className=\"sul-box-inset-1\">\n        <div className=\"forecast-container\">\n          {weather.slice(1, 4).map((hour) => {\n            return (\n              <div key={hour.dt} className=\"hour-item-wrapper\">\n                <HourItem hour={hour} />\n              </div>\n            );\n          })}\n        </div>\n        <button className=\"sul-btn forecast\" onClick={goToDaily}>\n          See 48 hour forecast\n        </button>\n      </div>\n      <div className=\"button-wrapper\">\n        <button className=\"sul-btn\" onClick={goToPollution}>\n          See Air Pollution For Now\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(HourlyForecast);\n","import { useState } from 'react';\n\nimport './styles.scss';\n\nconst SearchField = ({ handleChange }) => {\n  const [query, setQuery] = useState('');\n\n  const search = (e) => {\n    if (e.key === 'Enter') {\n      handleChange(query);\n    }\n  };\n\n  return (\n    <div className=\"search-container sul-box-raised-3\">\n      <input\n        type=\"text\"\n        placeholder=\"Search...\"\n        className=\"sul-text-field\"\n        onChange={(e) => setQuery(e.target.value)}\n        value={query}\n        onKeyPress={search}\n      />\n      <button className=\"sul-btn\" onClick={() => handleChange(query)}>\n        search\n      </button>\n    </div>\n  );\n};\n\nexport default SearchField;\n","import { useCallback, useEffect, useState } from 'react';\nimport Carousel from 'react-multi-carousel';\nimport { withRouter } from 'react-router';\n\nimport { responsiveConfig } from '../../helpers/carouselConfig';\nimport AdditionallyDashboard from '../AdditionallyDashboard';\nimport AlertsDashboard from '../AlertsDashboard';\nimport CurrentWeather from '../CurrentWeather';\nimport Header from '../Header';\nimport HourlyForecast from '../HourlyForecast';\nimport SearchField from '../SearchField';\nimport { getAllWeatherData, getCurrentWeatherData } from '../services';\n\nimport 'react-multi-carousel/lib/styles.css';\nimport './styles.scss';\n\nconst MainScreen = ({ weather, setWeather, userLocation }) => {\n  const [errors, setErrors] = useState('');\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  const handleChange = useCallback(\n    (query) => {\n      if (query) {\n        getCurrentWeatherData(query).then((result) => {\n          if (result.cod === '404') {\n            setErrors(result.message);\n            setWeather({});\n          } else {\n            setErrors('');\n            const coord = result.coord;\n            const info = { name: result.name, country: result.sys.country };\n\n            getAllWeatherData(coord).then((result) => {\n              setWeather({ ...result, info });\n            });\n          }\n        });\n      }\n    },\n    [setWeather],\n  );\n\n  useEffect(() => {\n    if (userLocation.lat && userLocation.lon) {\n      handleChange(userLocation);\n    }\n  }, [handleChange, userLocation]);\n\n  return (\n    <>\n      <Header />\n      <main>\n        <SearchField handleChange={handleChange} />\n        {weather.daily && weather.daily.length && (\n          <div className=\"sul-box-raised-3 container\">\n            <Carousel\n              additionalTransfrom={0}\n              arrows\n              centerMode={false}\n              containerClass=\"container-with-dots\"\n              afterChange={(previousSlide, _ref) =>\n                setCurrentSlide(_ref.currentSlide)\n              }\n              draggable\n              focusOnSelect={false}\n              keyBoardControl\n              minimumTouchDrag={80}\n              renderButtonGroupOutside={false}\n              renderDotsOutside={false}\n              showDots={false}\n              slidesToSlide={1}\n              swipeable\n              responsive={responsiveConfig}\n            >\n              {weather.daily.map((day) => {\n                return (\n                  <CurrentWeather\n                    key={day.dt}\n                    weather={day}\n                    info={weather.info}\n                    currentSlide={currentSlide}\n                  />\n                );\n              })}\n            </Carousel>\n            {weather.alerts && currentSlide === 0 && (\n              <AlertsDashboard alerts={weather.alerts} />\n            )}\n            <HourlyForecast weather={weather.hourly} />\n            <AdditionallyDashboard weather={weather.daily[currentSlide]} />\n          </div>\n        )}\n        {errors && <div className=\"sul-box-raised-1 error\">{errors}</div>}\n      </main>\n    </>\n  );\n};\n\nexport default withRouter(MainScreen);\n","import { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Route, Switch } from 'react-router-dom';\n\nimport AirPollution from './components/AirPollution';\nimport HourlyDashboard from './components/HourlyDashboard';\nimport MainScreen from './components/MainScreen';\n\nconst App = () => {\n  const [weather, setWeather] = useState({});\n  const [userLocation, setUserLocation] = useState({});\n\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setUserLocation({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        });\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <Switch>\n        <Route exact path=\"/\">\n          <MainScreen\n            weather={weather}\n            setWeather={setWeather}\n            userLocation={userLocation}\n          />\n        </Route>\n        <Route path=\"/daily\">\n          <HourlyDashboard weather={weather.hourly} />\n        </Route>\n        <Route path=\"/air-pollution\">\n          <AirPollution lat={weather.lat} lon={weather.lon} />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // eslint-disable-next-line no-console\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // eslint-disable-next-line no-console\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // eslint-disable-next-line no-console\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // eslint-disable-next-line no-console\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HttpsRedirect from 'react-https-redirect';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport './index.scss';\nimport 'soft-ui-library/dist/css/neumorphism-ui.css';\n\nReactDOM.render(\n  <HttpsRedirect>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </HttpsRedirect>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\nreportWebVitals();\n","module.exports = {\n  API_KEY: 'f8ff70fbf2626381653221b4b6fd1936',\n  BASE_URL: 'https://api.openweathermap.org/data/2.5/',\n  IMAGES_URL: 'https://openweathermap.org/img/wn/',\n};\n"],"sourceRoot":""}